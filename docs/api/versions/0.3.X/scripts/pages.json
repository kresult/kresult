[{"name":"fun <A, B> Either<A, B>.toKResult(): KResult<A, B>","description":"io.kresult.integration.arrow.toKResult","location":"integrations/kresult-arrow/io.kresult.integration.arrow/to-k-result.html","searchKeys":["toKResult","fun <A, B> Either<A, B>.toKResult(): KResult<A, B>","io.kresult.integration.arrow.toKResult"]},{"name":"fun <E, T> KResult<E, T>.toEither(): Either<E, T>","description":"io.kresult.integration.arrow.toEither","location":"integrations/kresult-arrow/io.kresult.integration.arrow/to-either.html","searchKeys":["toEither","fun <E, T> KResult<E, T>.toEither(): Either<E, T>","io.kresult.integration.arrow.toEither"]},{"name":"class Failure<out E>(val error: E) : KResult<E, Nothing> ","description":"io.kresult.core.KResult.Failure","location":"libs/kresult-core/io.kresult.core/-k-result/-failure/index.html","searchKeys":["Failure","class Failure<out E>(val error: E) : KResult<E, Nothing> ","io.kresult.core.KResult.Failure"]},{"name":"class FailureWithValue<out E, out T>(val error: E, val value: T) : KResult<E, T> ","description":"io.kresult.core.KResult.FailureWithValue","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/index.html","searchKeys":["FailureWithValue","class FailureWithValue<out E, out T>(val error: E, val value: T) : KResult<E, T> ","io.kresult.core.KResult.FailureWithValue"]},{"name":"class Success<out T>(val value: T) : KResult<Nothing, T> ","description":"io.kresult.core.KResult.Success","location":"libs/kresult-core/io.kresult.core/-k-result/-success/index.html","searchKeys":["Success","class Success<out T>(val value: T) : KResult<Nothing, T> ","io.kresult.core.KResult.Success"]},{"name":"constructor(error: E)","description":"io.kresult.core.KResult.Failure.Failure","location":"libs/kresult-core/io.kresult.core/-k-result/-failure/-failure.html","searchKeys":["Failure","constructor(error: E)","io.kresult.core.KResult.Failure.Failure"]},{"name":"constructor(error: E, value: T)","description":"io.kresult.core.KResult.FailureWithValue.FailureWithValue","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/-failure-with-value.html","searchKeys":["FailureWithValue","constructor(error: E, value: T)","io.kresult.core.KResult.FailureWithValue.FailureWithValue"]},{"name":"constructor(value: T)","description":"io.kresult.core.KResult.Success.Success","location":"libs/kresult-core/io.kresult.core/-k-result/-success/-success.html","searchKeys":["Success","constructor(value: T)","io.kresult.core.KResult.Success.Success"]},{"name":"fun <A> A.asFailure(): KResult<A, Nothing>","description":"io.kresult.core.asFailure","location":"libs/kresult-core/io.kresult.core/as-failure.html","searchKeys":["asFailure","fun <A> A.asFailure(): KResult<A, Nothing>","io.kresult.core.asFailure"]},{"name":"fun <A> A.asFailureList(): KResult<List<A>, Nothing>","description":"io.kresult.core.asFailureList","location":"libs/kresult-core/io.kresult.core/as-failure-list.html","searchKeys":["asFailureList","fun <A> A.asFailureList(): KResult<List<A>, Nothing>","io.kresult.core.asFailureList"]},{"name":"fun <A> A.asSuccess(): KResult<Nothing, A>","description":"io.kresult.core.asSuccess","location":"libs/kresult-core/io.kresult.core/as-success.html","searchKeys":["asSuccess","fun <A> A.asSuccess(): KResult<Nothing, A>","io.kresult.core.asSuccess"]},{"name":"fun <A> A.asSuccessList(): MultiValueKResult<Nothing, A>","description":"io.kresult.core.asSuccessList","location":"libs/kresult-core/io.kresult.core/as-success-list.html","searchKeys":["asSuccessList","fun <A> A.asSuccessList(): MultiValueKResult<Nothing, A>","io.kresult.core.asSuccessList"]},{"name":"fun <E : Throwable, T> KResult<E, T>.asResult(): Result<T>","description":"io.kresult.core.asResult","location":"libs/kresult-core/io.kresult.core/as-result.html","searchKeys":["asResult","fun <E : Throwable, T> KResult<E, T>.asResult(): Result<T>","io.kresult.core.asResult"]},{"name":"fun <E : Throwable, T> KResult<E, T>.getOrThrow(): T","description":"io.kresult.core.getOrThrow","location":"libs/kresult-core/io.kresult.core/get-or-throw.html","searchKeys":["getOrThrow","fun <E : Throwable, T> KResult<E, T>.getOrThrow(): T","io.kresult.core.getOrThrow"]},{"name":"fun <E, T, E1> KResult<E, T>.flatMapFailure(f: (failure: E) -> KResult<E1, T>): KResult<E1, T>","description":"io.kresult.core.flatMapFailure","location":"libs/kresult-core/io.kresult.core/flat-map-failure.html","searchKeys":["flatMapFailure","fun <E, T, E1> KResult<E, T>.flatMapFailure(f: (failure: E) -> KResult<E1, T>): KResult<E1, T>","io.kresult.core.flatMapFailure"]},{"name":"fun <E, T> KResult<E, KResult<E, T>>.flatten(): KResult<E, T>","description":"io.kresult.core.flatten","location":"libs/kresult-core/io.kresult.core/flatten.html","searchKeys":["flatten","fun <E, T> KResult<E, KResult<E, T>>.flatten(): KResult<E, T>","io.kresult.core.flatten"]},{"name":"fun <E, T> KResult<E, T>.combine(other: KResult<E, T>, combineFailure: (E, E) -> E, combineSuccess: (T, T) -> T): KResult<E, T>","description":"io.kresult.core.combine","location":"libs/kresult-core/io.kresult.core/combine.html","searchKeys":["combine","fun <E, T> KResult<E, T>.combine(other: KResult<E, T>, combineFailure: (E, E) -> E, combineSuccess: (T, T) -> T): KResult<E, T>","io.kresult.core.combine"]},{"name":"fun <E, T> KResult<KResult<E, T>, T>.flattenFailure(): KResult<E, T>","description":"io.kresult.core.flattenFailure","location":"libs/kresult-core/io.kresult.core/flatten-failure.html","searchKeys":["flattenFailure","fun <E, T> KResult<KResult<E, T>, T>.flattenFailure(): KResult<E, T>","io.kresult.core.flattenFailure"]},{"name":"fun <E, T> MultiErrorKResult<E, T>.errors(): List<E>","description":"io.kresult.core.errors","location":"libs/kresult-core/io.kresult.core/errors.html","searchKeys":["errors","fun <E, T> MultiErrorKResult<E, T>.errors(): List<E>","io.kresult.core.errors"]},{"name":"fun <E, T> combine(first: KResult<E, T>, second: KResult<E, T>, combineFailure: (E, E) -> E, combineSuccess: (T, T) -> T): KResult<E, T>","description":"io.kresult.core.KResult.Companion.combine","location":"libs/kresult-core/io.kresult.core/-k-result/-companion/combine.html","searchKeys":["combine","fun <E, T> combine(first: KResult<E, T>, second: KResult<E, T>, combineFailure: (E, E) -> E, combineSuccess: (T, T) -> T): KResult<E, T>","io.kresult.core.KResult.Companion.combine"]},{"name":"fun <E, T> fromNullable(value: T?, errFn: () -> E): KResult<E, T>","description":"io.kresult.core.KResult.Companion.fromNullable","location":"libs/kresult-core/io.kresult.core/-k-result/-companion/from-nullable.html","searchKeys":["fromNullable","fun <E, T> fromNullable(value: T?, errFn: () -> E): KResult<E, T>","io.kresult.core.KResult.Companion.fromNullable"]},{"name":"fun <T> KResult<T, T>.merge(): T","description":"io.kresult.core.merge","location":"libs/kresult-core/io.kresult.core/merge.html","searchKeys":["merge","fun <T> KResult<T, T>.merge(): T","io.kresult.core.merge"]},{"name":"fun <T> Result<T>.asKResult(): KResult<Throwable, T>","description":"io.kresult.core.asKResult","location":"libs/kresult-core/io.kresult.core/as-k-result.html","searchKeys":["asKResult","fun <T> Result<T>.asKResult(): KResult<Throwable, T>","io.kresult.core.asKResult"]},{"name":"fun <T> fromNullable(value: T?): KResult<Throwable, T>","description":"io.kresult.core.KResult.Companion.fromNullable","location":"libs/kresult-core/io.kresult.core/-k-result/-companion/from-nullable.html","searchKeys":["fromNullable","fun <T> fromNullable(value: T?): KResult<Throwable, T>","io.kresult.core.KResult.Companion.fromNullable"]},{"name":"fun failureOrNull(): E?","description":"io.kresult.core.KResult.failureOrNull","location":"libs/kresult-core/io.kresult.core/-k-result/failure-or-null.html","searchKeys":["failureOrNull","fun failureOrNull(): E?","io.kresult.core.KResult.failureOrNull"]},{"name":"fun getOrNull(): T?","description":"io.kresult.core.KResult.getOrNull","location":"libs/kresult-core/io.kresult.core/-k-result/get-or-null.html","searchKeys":["getOrNull","fun getOrNull(): T?","io.kresult.core.KResult.getOrNull"]},{"name":"fun isFailure(): Boolean","description":"io.kresult.core.KResult.isFailure","location":"libs/kresult-core/io.kresult.core/-k-result/is-failure.html","searchKeys":["isFailure","fun isFailure(): Boolean","io.kresult.core.KResult.isFailure"]},{"name":"fun isSuccess(): Boolean","description":"io.kresult.core.KResult.isSuccess","location":"libs/kresult-core/io.kresult.core/-k-result/is-success.html","searchKeys":["isSuccess","fun isSuccess(): Boolean","io.kresult.core.KResult.isSuccess"]},{"name":"fun swap(): KResult<T, E>","description":"io.kresult.core.KResult.swap","location":"libs/kresult-core/io.kresult.core/-k-result/swap.html","searchKeys":["swap","fun swap(): KResult<T, E>","io.kresult.core.KResult.swap"]},{"name":"infix inline fun <E, T> KResult<E, T>.failureOrDefault(default: (T) -> E): E","description":"io.kresult.core.failureOrDefault","location":"libs/kresult-core/io.kresult.core/failure-or-default.html","searchKeys":["failureOrDefault","infix inline fun <E, T> KResult<E, T>.failureOrDefault(default: (T) -> E): E","io.kresult.core.failureOrDefault"]},{"name":"infix inline fun <E, T> KResult<E, T>.getOrDefault(default: (E) -> T): T","description":"io.kresult.core.getOrDefault","location":"libs/kresult-core/io.kresult.core/get-or-default.html","searchKeys":["getOrDefault","infix inline fun <E, T> KResult<E, T>.getOrDefault(default: (E) -> T): T","io.kresult.core.getOrDefault"]},{"name":"infix inline fun <E, T> KResult<E, T>.getOrElse(default: (E) -> T): T","description":"io.kresult.core.getOrElse","location":"libs/kresult-core/io.kresult.core/get-or-else.html","searchKeys":["getOrElse","infix inline fun <E, T> KResult<E, T>.getOrElse(default: (E) -> T): T","io.kresult.core.getOrElse"]},{"name":"inline fun <E, T, T1> KResult<E, T>.flatMap(f: (success: T) -> KResult<E, T1>): KResult<E, T1>","description":"io.kresult.core.flatMap","location":"libs/kresult-core/io.kresult.core/flat-map.html","searchKeys":["flatMap","inline fun <E, T, T1> KResult<E, T>.flatMap(f: (success: T) -> KResult<E, T1>): KResult<E, T1>","io.kresult.core.flatMap"]},{"name":"inline fun <E, T> KResult<E, T>.filter(failureFn: (success: T) -> E, condition: (success: T) -> Boolean): KResult<E, T>","description":"io.kresult.core.filter","location":"libs/kresult-core/io.kresult.core/filter.html","searchKeys":["filter","inline fun <E, T> KResult<E, T>.filter(failureFn: (success: T) -> E, condition: (success: T) -> Boolean): KResult<E, T>","io.kresult.core.filter"]},{"name":"inline fun <E, T> KResult<E, T>.filter(failureValue: E, condition: (success: T) -> Boolean): KResult<E, T>","description":"io.kresult.core.filter","location":"libs/kresult-core/io.kresult.core/filter.html","searchKeys":["filter","inline fun <E, T> KResult<E, T>.filter(failureValue: E, condition: (success: T) -> Boolean): KResult<E, T>","io.kresult.core.filter"]},{"name":"inline fun <E, T> MultiErrorKResult<E, T>.validate(failureValue: E, expectationFn: (success: T) -> Boolean): MultiErrorKResult<E, T>","description":"io.kresult.core.validate","location":"libs/kresult-core/io.kresult.core/validate.html","searchKeys":["validate","inline fun <E, T> MultiErrorKResult<E, T>.validate(failureValue: E, expectationFn: (success: T) -> Boolean): MultiErrorKResult<E, T>","io.kresult.core.validate"]},{"name":"inline fun <R> fold(ifFailure: (failure: E) -> R, ifSuccess: (success: T) -> R): R","description":"io.kresult.core.KResult.fold","location":"libs/kresult-core/io.kresult.core/-k-result/fold.html","searchKeys":["fold","inline fun <R> fold(ifFailure: (failure: E) -> R, ifSuccess: (success: T) -> R): R","io.kresult.core.KResult.fold"]},{"name":"inline fun <R> map(f: (success: T) -> R): KResult<E, R>","description":"io.kresult.core.KResult.map","location":"libs/kresult-core/io.kresult.core/-k-result/map.html","searchKeys":["map","inline fun <R> map(f: (success: T) -> R): KResult<E, R>","io.kresult.core.KResult.map"]},{"name":"inline fun <R> mapFailure(f: (E) -> R): KResult<R, T>","description":"io.kresult.core.KResult.mapFailure","location":"libs/kresult-core/io.kresult.core/-k-result/map-failure.html","searchKeys":["mapFailure","inline fun <R> mapFailure(f: (E) -> R): KResult<R, T>","io.kresult.core.KResult.mapFailure"]},{"name":"inline fun <T> catch(f: () -> T): KResult<Throwable, T>","description":"io.kresult.core.KResult.Companion.catch","location":"libs/kresult-core/io.kresult.core/-k-result/-companion/catch.html","searchKeys":["catch","inline fun <T> catch(f: () -> T): KResult<Throwable, T>","io.kresult.core.KResult.Companion.catch"]},{"name":"inline fun onFailure(action: (failure: E) -> Unit): KResult<E, T>","description":"io.kresult.core.KResult.onFailure","location":"libs/kresult-core/io.kresult.core/-k-result/on-failure.html","searchKeys":["onFailure","inline fun onFailure(action: (failure: E) -> Unit): KResult<E, T>","io.kresult.core.KResult.onFailure"]},{"name":"inline fun onSuccess(action: (success: T) -> Unit): KResult<E, T>","description":"io.kresult.core.KResult.onSuccess","location":"libs/kresult-core/io.kresult.core/-k-result/on-success.html","searchKeys":["onSuccess","inline fun onSuccess(action: (success: T) -> Unit): KResult<E, T>","io.kresult.core.KResult.onSuccess"]},{"name":"object Companion","description":"io.kresult.core.KResult.Companion","location":"libs/kresult-core/io.kresult.core/-k-result/-companion/index.html","searchKeys":["Companion","object Companion","io.kresult.core.KResult.Companion"]},{"name":"object Companion","description":"io.kresult.core.KResult.Success.Companion","location":"libs/kresult-core/io.kresult.core/-k-result/-success/-companion/index.html","searchKeys":["Companion","object Companion","io.kresult.core.KResult.Success.Companion"]},{"name":"open operator fun component1(): E?","description":"io.kresult.core.KResult.component1","location":"libs/kresult-core/io.kresult.core/-k-result/component1.html","searchKeys":["component1","open operator fun component1(): E?","io.kresult.core.KResult.component1"]},{"name":"open operator fun component2(): T?","description":"io.kresult.core.KResult.component2","location":"libs/kresult-core/io.kresult.core/-k-result/component2.html","searchKeys":["component2","open operator fun component2(): T?","io.kresult.core.KResult.component2"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.kresult.core.KResult.Failure.equals","location":"libs/kresult-core/io.kresult.core/-k-result/-failure/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.kresult.core.KResult.Failure.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.kresult.core.KResult.FailureWithValue.equals","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.kresult.core.KResult.FailureWithValue.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.kresult.core.KResult.Success.equals","location":"libs/kresult-core/io.kresult.core/-k-result/-success/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.kresult.core.KResult.Success.equals"]},{"name":"open override fun hashCode(): Int","description":"io.kresult.core.KResult.Failure.hashCode","location":"libs/kresult-core/io.kresult.core/-k-result/-failure/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.kresult.core.KResult.Failure.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.kresult.core.KResult.FailureWithValue.hashCode","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.kresult.core.KResult.FailureWithValue.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.kresult.core.KResult.Success.hashCode","location":"libs/kresult-core/io.kresult.core/-k-result/-success/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.kresult.core.KResult.Success.hashCode"]},{"name":"open override fun toString(): String","description":"io.kresult.core.KResult.Failure.toString","location":"libs/kresult-core/io.kresult.core/-k-result/-failure/to-string.html","searchKeys":["toString","open override fun toString(): String","io.kresult.core.KResult.Failure.toString"]},{"name":"open override fun toString(): String","description":"io.kresult.core.KResult.FailureWithValue.toString","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/to-string.html","searchKeys":["toString","open override fun toString(): String","io.kresult.core.KResult.FailureWithValue.toString"]},{"name":"open override fun toString(): String","description":"io.kresult.core.KResult.Success.toString","location":"libs/kresult-core/io.kresult.core/-k-result/-success/to-string.html","searchKeys":["toString","open override fun toString(): String","io.kresult.core.KResult.Success.toString"]},{"name":"operator fun <E : Comparable<E>, T : Comparable<T>> KResult<E, T>.compareTo(other: KResult<E, T>): Int","description":"io.kresult.core.compareTo","location":"libs/kresult-core/io.kresult.core/compare-to.html","searchKeys":["compareTo","operator fun <E : Comparable<E>, T : Comparable<T>> KResult<E, T>.compareTo(other: KResult<E, T>): Int","io.kresult.core.compareTo"]},{"name":"sealed class KResult<out E, out T>","description":"io.kresult.core.KResult","location":"libs/kresult-core/io.kresult.core/-k-result/index.html","searchKeys":["KResult","sealed class KResult<out E, out T>","io.kresult.core.KResult"]},{"name":"typealias MultiErrorKResult<E, T> = KResult<List<E>, T>","description":"io.kresult.core.MultiErrorKResult","location":"libs/kresult-core/io.kresult.core/-multi-error-k-result/index.html","searchKeys":["MultiErrorKResult","typealias MultiErrorKResult<E, T> = KResult<List<E>, T>","io.kresult.core.MultiErrorKResult"]},{"name":"typealias MultiValueKResult<E, T> = KResult<E, List<T>>","description":"io.kresult.core.MultiValueKResult","location":"libs/kresult-core/io.kresult.core/-multi-value-k-result/index.html","searchKeys":["MultiValueKResult","typealias MultiValueKResult<E, T> = KResult<E, List<T>>","io.kresult.core.MultiValueKResult"]},{"name":"val error: E","description":"io.kresult.core.KResult.Failure.error","location":"libs/kresult-core/io.kresult.core/-k-result/-failure/error.html","searchKeys":["error","val error: E","io.kresult.core.KResult.Failure.error"]},{"name":"val error: E","description":"io.kresult.core.KResult.FailureWithValue.error","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/error.html","searchKeys":["error","val error: E","io.kresult.core.KResult.FailureWithValue.error"]},{"name":"val unit: KResult<Nothing, Unit>","description":"io.kresult.core.KResult.Success.Companion.unit","location":"libs/kresult-core/io.kresult.core/-k-result/-success/-companion/unit.html","searchKeys":["unit","val unit: KResult<Nothing, Unit>","io.kresult.core.KResult.Success.Companion.unit"]},{"name":"val value: T","description":"io.kresult.core.KResult.FailureWithValue.value","location":"libs/kresult-core/io.kresult.core/-k-result/-failure-with-value/value.html","searchKeys":["value","val value: T","io.kresult.core.KResult.FailureWithValue.value"]},{"name":"val value: T","description":"io.kresult.core.KResult.Success.value","location":"libs/kresult-core/io.kresult.core/-k-result/-success/value.html","searchKeys":["value","val value: T","io.kresult.core.KResult.Success.value"]}]